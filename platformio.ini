[platformio]
src_dir = dev ; Default target is ./dev/dev.ino
default_envs = dev
build_cache_dir = .pio_cache

; Support for custom build arguments via environment variables
; These can be set by the CI system or build scripts:
; - FASTLED_BUILD_DIR: Custom build directory (default: .pio/build)
; - FASTLED_OPTIMIZATION_REPORT: Enable optimization report generation
; - FASTLED_GENERATE_BUILD_INFO: Enable build_info.json generation
; - FASTLED_CUSTOM_DEFINES: Additional comma-separated defines

[env]
; Global settings for all environments
build_flags =
    -DUSE_CCACHE=1
    ; Add optimization report flag if requested
    ${sysenv.FASTLED_OPTIMIZATION_REPORT_FLAG}
    ; Add custom defines if provided
    ${sysenv.FASTLED_CUSTOM_DEFINES_FLAGS}
build_cache_enable = true
build_cache_dir = ${platformio.build_cache_dir}
; Custom build directory if specified
build_dir = ${sysenv.FASTLED_BUILD_DIR}
extra_scripts = 
    pre:/workspace/ci/ci/ccache_config.py
    ; Add build info generation script if requested
    ${sysenv.FASTLED_BUILD_INFO_SCRIPT}

; Symlink FastLED library for all environments to avoid late binding issues
; Note: For pio ci builds, the symlink is passed as a --project-option instead
; lib_deps = 
;   FastLED=symlink://./

; ==============================================================================
; DEVELOPMENT AND TEST ENVIRONMENTS
; ==============================================================================

[env:dev]
extends = env:esp32s3

[env:generic-esp]
; Development branch of the open source espressif32 platform
platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip
framework = arduino
upload_protocol = esptool
monitor_filters = 
	default
	esp32_exception_decoder  ; Decode exceptions so that they are human readable.
build_type = debug
build_flags =
    ${env.build_flags}
    -DDEBUG
    -DPIN_DATA=9
    -DPIN_CLOCK=7
    -DFASTLED_RMT5=1
    -g
    -Og
    -DCORE_DEBUG_LEVEL=5
    -DLOG_LOCAL_LEVEL=ESP_LOG_VERBOSE
    -DFASTLED_ESP32_SPI_BULK_TRANSFER=1
    -D IDF_CCACHE_ENABLE=1
check_tool = clangtidy

; ==============================================================================
; ESP32 FAMILY BOARDS
; ==============================================================================

[env:esp32dev]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.10/platform-espressif32.zip
board = esp32dev
framework = arduino
build_flags = 
    ${env.build_flags}
    -D IDF_CCACHE_ENABLE=1

[env:esp32dev_idf44]
platform = platformio/espressif32
board = esp32dev
framework = arduino
build_flags = 
    ${env.build_flags}
    -D IDF_CCACHE_ENABLE=1

[env:esp32dev_idf33]
platform = espressif32@1.11.2
board = esp32dev
framework = arduino
build_flags = 
    ${env.build_flags}

[env:esp32s3]
extends = env:generic-esp
board = seeed_xiao_esp32s3
platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip
build_flags = 
    ${env:generic-esp.build_flags}
board_build.partitions = huge_app.csv

[env:esp32c6]
extends = env:generic-esp
board = esp32-c6-devkitc-1
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.10/platform-espressif32.zip
build_flags = 
    ${env:generic-esp.build_flags}

[env:esp32c3]
extends = env:generic-esp
board = esp32-c3-devkitm-1
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.10/platform-espressif32.zip
build_flags = 
    ${env:generic-esp.build_flags}

[env:esp32c2]
extends = env:generic-esp
platform = https://github.com/pioarduino/platform-espressif32.git#develop
board = esp32-c2-devkitm-1
custom_sdkconfig = CONFIG_IDF_TARGET="esp32c2"
build_flags = 
    ${env:generic-esp.build_flags}
    -D CONFIG_IDF_TARGET_ESP32C2=1

[env:esp32s2]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.10/platform-espressif32.zip
board = esp32dev
board_build.mcu = esp32s2
framework = arduino
build_flags = 
    ${env.build_flags}
    -D IDF_CCACHE_ENABLE=1

[env:esp32p4]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
board = esp32-p4-evboard
framework = arduino
build_flags = 
    ${env.build_flags}
    -D IDF_CCACHE_ENABLE=1

[env:esp32rmt_51]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.10/platform-espressif32.zip
board = esp32-s3-devkitc-1
framework = arduino
build_flags = 
    ${env.build_flags}
    -D IDF_CCACHE_ENABLE=1
    -D FASTLED_RMT5=1

[env:esp32-wroom-32]
extends = env:generic-esp
board = esp32dev
build_flags = ${env:generic-esp.build_flags}

; ==============================================================================
; ESP8266 FAMILY BOARDS
; ==============================================================================

[env:esp01]
platform = espressif8266
board = esp01
framework = arduino
build_flags = 
    ${env.build_flags}

; ==============================================================================
; ARDUINO AVR BOARDS
; ==============================================================================

[env:uno]
platform = atmelavr
board = uno
framework = arduino
build_flags = 
    ${env.build_flags}

[env:yun]
platform = atmelavr
board = yun
framework = arduino
build_flags = 
    ${env.build_flags}

[env:attiny85]
platform = atmelavr
board = attiny85
framework = arduino
build_flags = 
    ${env.build_flags}

[env:attiny88]
platform = atmelavr
board = attiny88
framework = arduino
build_flags = 
    ${env.build_flags}

[env:ATtiny1616]
platform = atmelmegaavr
board = ATtiny1616
framework = arduino
build_flags = 
    ${env.build_flags}

[env:nano_every]
platform = atmelmegaavr
board = nano_every
framework = arduino
build_flags = 
    ${env.build_flags}

; ==============================================================================
; TEENSY BOARDS
; ==============================================================================

[env:teensylc]
platform = teensy
board = teensylc
framework = arduino
build_flags = 
    ${env.build_flags}

[env:teensy30]
platform = teensy
board = teensy30
framework = arduino
build_flags = 
    ${env.build_flags}

[env:teensy31]
platform = teensy
board = teensy31
framework = arduino
build_flags = 
    ${env.build_flags}

[env:teensy40]
platform = teensy
board = teensy40
framework = arduino
build_flags = 
    ${env.build_flags}
    -D USB_MIDI_SERIAL

[env:teensy41]
platform = teensy
board = teensy41
framework = arduino
build_flags = 
    ${env.build_flags}

; ==============================================================================
; ARM CORTEX-M BOARDS
; ==============================================================================

[env:giga_r1]
platform = ststm32
board = giga_r1_m7
framework = arduino
build_flags = 
    ${env.build_flags}

[env:giga_r1_m7]
platform = ststm32
board = giga_r1_m7
framework = arduino
build_flags = 
    ${env.build_flags}

[env:bluepill]
platform = ststm32
board = bluepill_f103c8
framework = arduino
build_flags = 
    ${env.build_flags}

[env:maple_mini]
platform = ststm32
board = maple_mini_b20
framework = arduino
build_flags = 
    ${env.build_flags}

[env:digix]
platform = atmelsam
board = due
framework = arduino
build_flags = 
    ${env.build_flags}

[env:due]
platform = atmelsam
board = due
framework = arduino
build_flags = 
    ${env.build_flags}

; ==============================================================================
; NORDIC NRF52 BOARDS
; ==============================================================================

[env:adafruit_feather_nrf52840_sense]
platform = nordicnrf52
board = adafruit_feather_nrf52840_sense
framework = arduino
build_flags = 
    ${env.build_flags}

[env:xiaoblesense_adafruit]
platform = https://github.com/maxgerhardt/platform-nordicnrf52
board = xiaoblesense_adafruit
framework = arduino
build_flags = 
    ${env.build_flags}

[env:xiaoblesense]
platform = https://github.com/maxgerhardt/platform-nordicnrf52
board = xiaoble_adafruit
framework = arduino
build_flags = 
    ${env.build_flags}

[env:nrf52840_dk]
platform = https://github.com/maxgerhardt/platform-nordicnrf52
board = xiaoble_adafruit
framework = arduino
build_flags = 
    ${env.build_flags}

; ==============================================================================
; RASPBERRY PI PICO BOARDS
; ==============================================================================

[env:rpipico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = rpipico
framework = arduino
platform_packages = framework-arduinopico@https://github.com/earlephilhower/arduino-pico.git
board_build.core = earlephilhower
board_build.filesystem_size = 0.5m
build_flags = 
    ${env.build_flags}

[env:rpipico2]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = rpipico2
framework = arduino
platform_packages = framework-arduinopico@https://github.com/earlephilhower/arduino-pico.git
board_build.core = earlephilhower
board_build.filesystem_size = 0.5m
build_flags = 
    ${env.build_flags}

[env:sparkfun_xrp_controller]
platform = https://github.com/maxgerhardt/platform-raspberrypi
board = sparkfun_xrp_controller
framework = arduino
build_flags = 
    ${env.build_flags}
extra_scripts = 
    ${env.extra_scripts}
    pre:ci/ci-flags.py

; ==============================================================================
; RENESAS BOARDS
; ==============================================================================

[env:uno_r4_wifi]
platform = renesas-ra
board = uno_r4_wifi
framework = arduino
build_flags = 
    ${env.build_flags}

; ==============================================================================
; APOLLO3 BOARDS
; ==============================================================================

[env:apollo3_red]
platform = https://github.com/nigelb/platform-apollo3blue
board = SparkFun_RedBoard_Artemis_ATP
framework = arduino
platform_packages = framework-arduinoapollo3@https://github.com/sparkfun/Arduino_Apollo3#v2.2.0
build_flags = 
    ${env.build_flags}

[env:apollo3_thing_explorable]
platform = https://github.com/nigelb/platform-apollo3blue
board = SparkFun_Thing_Plus_expLoRaBLE
framework = arduino
platform_packages = framework-arduinoapollo3@https://github.com/sparkfun/Arduino_Apollo3#v2.2.0
build_flags = 
    ${env.build_flags}

; ==============================================================================
; WEB/WASM TARGET
; ==============================================================================

[env:web]
; Web target is handled separately by the build system
; This environment is a placeholder for consistency
platform = native
build_flags = 
    ${env.build_flags}
    -DFASTLED_STUB_IMPL
